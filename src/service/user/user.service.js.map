{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../../../src/service/user/user.service.ts"],"names":[],"mappings":";;;AACA,6CAAyD;AAEzD,MAAM,WAAW;IACb,YAAY;QACR,OAAO,sBAAW,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,MAAM;QACX,OAAO,sBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,UAAU,CAAC,IAAgB,EAAE,WAAwB;QACjD,OAAO,sBAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,UAAU,CAAC,MAAM,EAAE,WAAwB;QAC3C,OAAO,sBAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;IACvD,CAAC;IAEG,UAAU,CAAC,MAAM;QACb,OAAO,sBAAW,CAAC,OAAO,CAAC;YACxB,KAAK,EAAE,EAAC,MAAM,EAAC;SACjB,CAAC,CAAC;IACP,CAAC;CAEJ;AACY,QAAA,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC","sourcesContent":["import { Transaction } from 'sequelize';\nimport { IUserModel, UserDBModel } from '../../database';\n\nclass UserService {\n    findAllUsers() {\n        return UserDBModel.findAll();\n    }\n\n    findUser(userId) {\n        return UserDBModel.findByPk(userId);\n    }\n\n    createUser(user: IUserModel, transaction: Transaction) {\n        return UserDBModel.create(user, { transaction });\n    }\n\n    updateUser(userId, transaction: Transaction) {\n    return UserDBModel.create(userId, { transaction });\n}\n\n    deleteUser(userId) {\n        return UserDBModel.destroy({\n           where: {userId}\n        });\n    }\n\n}\nexport const userService = new UserService();\n"]}