{"version":3,"file":"checkIsUserExists.js","sourceRoot":"","sources":["../../../src/midlleware/user/checkIsUserExists.ts"],"names":[],"mappings":";;;AAEA,+CAA0D;AAC1D,uCAAmD;AAEnD,2CAA4C;AAE/B,QAAA,iBAAiB,GAAG,KAAK,EAAE,GAAqB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAChG,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC/B,MAAM,aAAa,GAAG,MAAM,qBAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IAE9D,IAAI,CAAC,aAAa,EAAE;QAChB,OAAO,IAAI,CACP,IAAI,oBAAY,CACZ,mCAAuB,CAAC,SAAS,EACjC,cAAM,CAAC,0BAA0B,CAAC,OAAO,EACzC,cAAM,CAAC,0BAA0B,CAAC,IAAI,CACzC,CAAC,CAAC;KACV;IAED,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC;IAEzB,IAAI,EAAE,CAAC;AACX,CAAC,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\n\nimport { ResponseStatusCodesEnum } from '../../constants';\nimport { ErrorHandler, errors } from '../../error';\nimport { IRequestExtended } from '../../models';\nimport { userService } from '../../service';\n\nexport const checkIsUserExists = async (req: IRequestExtended, res: Response, next: NextFunction) => {\n    const { user_id } = req.params;\n    const isUserPresent = await userService.findUser({ user_id });\n\n    if (!isUserPresent) {\n        return next(\n            new ErrorHandler(\n                ResponseStatusCodesEnum.NOT_FOUND,\n                errors.NOT_FOUND_USER_NOT_PRESENT.message,\n                errors.NOT_FOUND_USER_NOT_PRESENT.code\n            ));\n    }\n\n    req.user = isUserPresent;\n\n    next();\n};\n"]}